worker_processes auto;

events {
  worker_connections 2048; # increase if you have lots of clients
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include    mime.types;
#   include    /etc/nginx/proxy.conf;
#   include    /etc/nginx/fastcgi.conf;
#   index    index.html index.htm index.php;
  
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  
  access_log /var/log/nginx/access.log combined;
  
  server_tokens off;
  autoindex     off;
  sendfile      on;
  tcp_nopush    on;

  limit_req_zone $binary_remote_addr zone=req_limit_per_ip:20m rate=10r/s;
  limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:20m;

  upstream helios {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server web:8000 fail_timeout=0;
  }

#   server {
#     # if no Host match, close the connection to prevent host spoofing
#     listen 80 default_server;
#     return 444;
#   }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;
    listen 443 ssl;
    client_max_body_size 64m;

    # set the correct host(s) for your site
    server_name staging.pemilu-kmtk.xyz vote.pemilu-kmtk.xyz;

    ssl_certificate /etc/nginx/certs/pemilu-kmtk.xyz.pem;
    ssl_certificate_key /etc/nginx/certs/pemilu-kmtk.xyz.key;

    # keepalive_timeout 5;

    # path for static files
    root /usr/src/app;

    # location / {
    #   # checks for static file, if not found proxy to app
    #   try_files $uri @proxy_to_app;
    # }

    location / {
      limit_req zone=req_limit_per_ip burst=5;
      limit_conn conn_limit_per_ip 40;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://helios;
    }

    # location /media/ {
    #     alias /usr/src/app/staticfiles/;
    # }

    # location /booth/ {
    #     alias /usr/src/app/heliosbooth/;
    # }

    # location /verifier/ {
    #     alias /usr/src/app/heliosverifier/;
    # }

    # location /static/auth/ {
    #     alias /usr/src/app/helios_auth/media/;
    # }

    # location /static/helios/ {
    #     alias /usr/src/app/helios/media/;
    # }

    # location /static/ {
    #     alias /usr/src/app/server_ui/media/;
    # }

    # error_page 500 502 503 504 /500.html;
    # location = /500.html {
    #   root /path/to/app/current/public;
    # }
  }
}